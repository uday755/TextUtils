{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","heading","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","placeholder","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","updateText","Fragment","style","color","title","backgroundColor","onChange","event","target","value","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","split","join","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","filter","element","Alert","height","alert","status","word","lowerOfWord","charAt","slice","capitalize","msg","defaultProps","about","App","setMode","_useState3","_useState4","setAlert","alertStatus","alertMessage","setTimeout","console","log","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.f73d7047.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`} >\r\n            <div className=\"container-fluid\">\r\n                {/* <Link className=\"navbar-brand \" to=\"/\">{props.heading}</Link> */}\r\n                <a className=\"navbar-brand \" href=\"/\">{props.heading}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n                        </li>\r\n                        {/* <li className=\"nav-item\"> */}\r\n                            {/* <Link className=\"nav-link \" aria-current=\"page\" to=\"/about\">{props.about}</Link> */}\r\n                            {/* <a className=\"nav-link \" aria-current=\"page\" href=\"/about\">{props.about}</a> */}\r\n                        {/* </li> */}\r\n\r\n                    </ul>\r\n                    <div className={`form-check form-switch mx-3 text-${props.mode === 'light' ? 'black' : 'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode === 'light' ? 'dark' : 'light'} Mode</label>\r\n                    </div>\r\n                    <form className=\"d-flex\" role=\"search\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    heading: PropTypes.string,\r\n    about: PropTypes.string,\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    heading: 'Enter Title here',\r\n    about: 'Enter Text here'\r\n}","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const [text, updateText] = useState('');\r\n    const handleOnChange = (event) => {\r\n        updateText(event.target.value);\r\n    }\r\n\r\n    const handleUpClick = () => {\r\n        let newText = text.toUpperCase();\r\n        updateText(newText);\r\n        props.showAlert('success', 'Converted to Uppercase');\r\n    }\r\n    const handleLoClick = () => {\r\n        let newText = text.toLowerCase();\r\n        updateText(newText);\r\n        props.showAlert('success', 'Converted to Lowercase');\r\n    }\r\n    const handleClearClick = () => {\r\n        let newText = \"\";\r\n        updateText(newText);\r\n        props.showAlert('success', 'Text Cleared');\r\n    }\r\n    const handleCopyText = () => {\r\n        var newText = document.getElementById('myBox');\r\n        newText.select();\r\n        navigator.clipboard.writeText(newText.value);\r\n        document.getSelection().removeAllRanges();\r\n        props.showAlert('success', 'Copied to Clipboard');\r\n    }\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        updateText(newText.join(\" \"));\r\n        props.showAlert('success', 'Removed Extra Spaces');\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{ color: props.mode === 'light' ? 'black' : 'white' }} >\r\n                <h1>{props.title}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea style={{ backgroundColor: props.mode === 'dark' ? '#13466e' : 'white', color: props.mode === 'dark' ? 'white' : 'black' }} className=\"form-control\" id=\"myBox\" onChange={handleOnChange} value={text} rows=\"8\"></textarea>\r\n                </div>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n                <button disabled={text.length===0}className=\"btn btn-primary mx-2 my-2\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleCopyText}>Copy Text</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleClearClick}>Clear Text</button>\r\n            </div>\r\n            <div className=\"container my-3\" style={{ color: props.mode === 'light' ? 'black' : 'white' }}>\r\n                <h2>Your Text Summary</h2>\r\n                <p>{text.split(\" \").filter((element) => { return element.length !== 0 }).length} Words and {text.length} characters</p>\r\n                <p>{0.008 * ((text.split(\" \")).filter((element) => { return element.length !== 0 }).length)} Minutes Read</p>\r\n                <p>Total Lines : {text.split(\".\").filter((element) => { return element.length !== 0 }).length}</p>\r\n                <h2>Preview</h2>\r\n                <p>{text.length > 0 ? text : 'Enter Some text to preview it here'}</p>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) => {\r\n        let lowerOfWord = word.toLowerCase();\r\n        return lowerOfWord.charAt(0).toUpperCase() + lowerOfWord.slice(1);\r\n    }\r\n    return (\r\n        <div style={{height:'50px'}}>\r\n            {props.alert && <div className={`alert alert-${props.alert.status} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.status)}</strong> : {props.alert.msg}\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\nimport Navbar from \"./Components/Navbar\";\nimport TextForm from \"./Components/TextForm\";\nimport Alert from './Components/Alert';\n// import About from './Components/About';\n// import About from \"./Components/About\";\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light'); // Selects the Mode\n  const [alert, setAlert] = useState(null); //   State Variable for Alert Message\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      console.log('Mode Changed to Dark Mode');\n      document.body.style.backgroundColor = '#042743';\n      showAlert('success', 'Mode Succesfully changed to dark mode');\n      document.title = 'TextUtils - Dark Mode';\n    } else {\n      setMode('light');\n      console.log('Mode Changed to Light Mode');\n      document.body.style.backgroundColor = 'white';\n      showAlert('success', 'Mode Succesfully changed to light mode');\n      document.title = 'TextUtils - Light Mode';\n    }\n  }\n\n  const showAlert = (alertStatus, alertMessage) => {\n    setAlert({\n      status: alertStatus,\n      msg: alertMessage\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar heading=\"TextUtils\" about=\"About Us\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Routes> */}\n            {/* <Route path='/about' element={<About mode={mode} />} /> */}\n            {/* <About mode={mode} /> */}\n            {/* <Route path=\"/\" element={<TextForm showAlert={showAlert} heading=\"TextUtils - the best\" mode={mode} />} /> */}\n            <TextForm showAlert={showAlert} heading=\"TextUtils - the best\" mode={mode} />\n            {/* <About /> */}\n          {/* </Routes> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\nexport default App; ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}