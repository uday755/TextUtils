{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","heading","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","about","onClick","toggleMode","role","htmlFor","placeholder","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","updateText","handleLoClick","newText","toLowerCase","showAlert","Fragment","style","color","title","backgroundColor","onChange","event","target","value","rows","toUpperCase","split","length","Alert","alert","status","word","lowerOfWord","charAt","slice","capitalize","msg","defaultProps","App","setMode","_useState3","_useState4","setAlert","alertStatus","alertMessage","setTimeout","console","log","document","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","getElementById"],"mappings":"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","file":"static/js/main.ff51433c.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`} >\r\n            <div className=\"container-fluid\">\r\n                {/* <Link className=\"navbar-brand \" to=\"/\">{props.heading}</Link> */}\r\n                <a className=\"navbar-brand \" href=\"#\">{props.heading}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            {/* <Link className=\"nav-link \" aria-current=\"page\" to=\"/about\">{props.about}</Link> */}\r\n                            <a className=\"nav-link \" aria-current=\"page\" href=\"#\">{props.about}</a>\r\n                        </li>\r\n\r\n                    </ul>\r\n                    <div className={`form-check form-switch mx-3 text-${props.mode==='light'?'black':'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode==='light'?'dark':'light'} Mode</label>\r\n                    </div>\r\n                    <form className=\"d-flex\" role=\"search\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    heading: PropTypes.string,\r\n    about: PropTypes.string,\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    heading: 'Enter Title here',\r\n    about: 'Enter Text here'\r\n}","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const [text, updateText] = useState('');\r\n            // text = \"new text \" // wrong way to change state\r\n            // textUpdate(\"new text \") // Correct way to change state\r\n    const handleOnChange = (event) => {\r\n            // console.log('On Change');\r\n        updateText(event.target.value);\r\n    }\r\n            // textUpdate(\"new text \") // Correct way to change state\r\n    const handleUpClick = () => {\r\n            // console.log('Uppercase was Clicked' + text);\r\n        let newText = text.toUpperCase();\r\n        updateText(newText);\r\n        props.showAlert('success','Converted to Uppercase');\r\n    }\r\n    const handleLoClick = () => {\r\n            // console.log('Uppercase was Clicked' + text);\r\n        let newText = text.toLowerCase();\r\n        updateText(newText);\r\n        props.showAlert('success','Converted to Lowercase');\r\n    }\r\n    const handleClearClick = () => {\r\n            // console.log('Uppercase was Clicked' + text);\r\n        let newText = \"\";\r\n        updateText(newText);\r\n        props.showAlert('success','Text Cleared');\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{color : props.mode === 'light'?'black':'white'}} >\r\n                <h1>{props.title}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea style={{backgroundColor : props.mode === 'dark'?'gray':'white',color : props.mode === 'dark'?'white':'black'}} className=\"form-control\" id=\"myBox\" onChange={handleOnChange} value={text} rows=\"8\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-2 my-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n                <button className=\"btn btn-primary mx-2 my-2\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n                <button className=\"btn btn-primary mx-2 my-2\" onClick={handleLoClick}>Convert to Sentence Case</button>\r\n                <button className=\"btn btn-primary mx-2 my-2\" onClick={handleLoClick}>Remove Extra Spaces</button>\r\n                <button className=\"btn btn-primary mx-2 my-2\" onClick={handleLoClick}>Invert Content</button>\r\n                <button className=\"btn btn-primary mx-2 my-2\" onClick={handleClearClick}>Clear Text</button>\r\n            </div>\r\n            <div className=\"container my-3\" style={{color : props.mode === 'light'?'black':'white'}}>\r\n                <h2>Your Text Summary</h2>\r\n                <p>{text.split(\" \").length} Words and {text.length} characters</p>\r\n                <p>{0.008 * ((text.split(\" \")).length)} Minutes Read</p>\r\n                <p>Total Lines : {text.split(\".\").length}</p>\r\n                <h2>Preview</h2>\r\n                <p>{text.length>0?text:'Enter Some text to preview it here'}</p>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word)=>{\r\n        let lowerOfWord = word.toLowerCase();\r\n        return lowerOfWord.charAt(0).toUpperCase() + lowerOfWord.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.status} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize( props.alert.status)}</strong> => {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\nimport Navbar from \"./Components/Navbar\";\nimport TextForm from \"./Components/TextForm\";\nimport Alert from './Components/Alert';\n// import About from \"./Components/About\";\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light'); // Selects the Mode\n  const [alert, setAlert] = useState(null); //   State Variable for Alert Message\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      console.log('Mode Changed to Dark Mode');\n      document.body.style.backgroundColor = '#042743';\n      showAlert('success', 'Mode Succesfully changed to dark mode');\n      document.title = 'TextUtils - Dark Mode';\n    } else {\n      setMode('light');\n      console.log('Mode Changed to Light Mode');\n      document.body.style.backgroundColor = 'white';\n      showAlert('success', 'Mode Succesfully changed to light mode');\n      document.title = 'TextUtils - Light Mode';\n    }\n  }\n\n  const showAlert = (alertStatus, alertMessage) => {\n    setAlert({\n      status: alertStatus,\n      msg: alertMessage\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar heading=\"TextUtils\" about=\"About Us\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Routes> */}\n            {/* <Route path='/about' element = {<About mode = {mode} />} /> */}\n            {/* <About mode = {mode} /> */}\n            {/* <Route path=\"/\" element = {<TextForm showAlert={showAlert} heading=\"TextUtils - the best\" mode={mode}/>}/> */}\n            <TextForm showAlert={showAlert} heading=\"TextUtils - the best\" mode={mode}/>\n          {/* </Routes> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\nexport default App; ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}